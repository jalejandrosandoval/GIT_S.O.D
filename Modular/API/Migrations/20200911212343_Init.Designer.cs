// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20200911212343_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bussiness_Logic.Models.Afiliations.AFP", b =>
                {
                    b.Property<int>("Id_AFP")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameAFP")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_AFP");

                    b.ToTable("AFP");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Afiliations.ARL", b =>
                {
                    b.Property<int>("Id_ARL")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameARL")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_ARL");

                    b.ToTable("ARL");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Afiliations.Afiliation", b =>
                {
                    b.Property<int>("Id_Afiliations")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AFPId_AFP")
                        .HasColumnType("int");

                    b.Property<int>("ARLId_ARL")
                        .HasColumnType("int");

                    b.Property<int>("CCFId_CCF")
                        .HasColumnType("int");

                    b.Property<int>("EPSId_EPS")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesId_Employee")
                        .HasColumnType("int");

                    b.Property<int>("IdAFP")
                        .HasColumnType("int");

                    b.Property<int>("IdARL")
                        .HasColumnType("int");

                    b.Property<int>("IdCCF")
                        .HasColumnType("int");

                    b.Property<int>("IdEPS")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.HasKey("Id_Afiliations");

                    b.HasIndex("AFPId_AFP");

                    b.HasIndex("ARLId_ARL");

                    b.HasIndex("CCFId_CCF");

                    b.HasIndex("EPSId_EPS");

                    b.HasIndex("EmployeesId_Employee");

                    b.ToTable("Afiliations");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Afiliations.CCF", b =>
                {
                    b.Property<int>("Id_CCF")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCCF")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_CCF");

                    b.ToTable("CCF");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Afiliations.EPS", b =>
                {
                    b.Property<int>("Id_EPS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameEPS")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_EPS");

                    b.ToTable("EPS");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Col.CitiesCol", b =>
                {
                    b.Property<int>("Id_CitiesCol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("DepartmentsColId_Departments")
                        .HasColumnType("int");

                    b.Property<int>("Id_DepartmentsCols")
                        .HasColumnType("int");

                    b.HasKey("Id_CitiesCol");

                    b.HasIndex("DepartmentsColId_Departments");

                    b.ToTable("CitiesCols");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Col.DepartmentsCol", b =>
                {
                    b.Property<int>("Id_Departments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_Departments");

                    b.ToTable("DepartmentsCols");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Complements.Internal_Information", b =>
                {
                    b.Property<int>("Id_Internal_Information")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id_Internal_Information");

                    b.ToTable("Internal_Information");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Complements.StatusCivil", b =>
                {
                    b.Property<int>("Id_StatusCivil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name_StatusCivil")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_StatusCivil");

                    b.ToTable("StatusCivil");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Complements.TypeCity", b =>
                {
                    b.Property<int>("Id_TypeCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name_TypeCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_TypeCity");

                    b.ToTable("TypeCity");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Complements.TypeDocument", b =>
                {
                    b.Property<int>("Id_TypeDocument")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name_TypeDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_TypeDocument");

                    b.ToTable("TypeDocument");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Configuration.Configuration_Initial", b =>
                {
                    b.Property<int>("ID_ConfigInit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ID_ConfigInit");

                    b.ToTable("Configuration_Initial");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Employee.Departments", b =>
                {
                    b.Property<int>("Id_Departments")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_Departments");

                    b.ToTable("DepartmentsEmp");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Employee.EmployeeType", b =>
                {
                    b.Property<int>("Id_EmployeeType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmployeeTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id_EmployeeType");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Employee.Employee_Cities", b =>
                {
                    b.Property<int>("Id_Employee_Cities")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CitiesColId_CitiesCol")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId_Employee")
                        .HasColumnType("int");

                    b.Property<int>("IdCitiesCol")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int>("IdTypeCity")
                        .HasColumnType("int");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TypeCityId_TypeCity")
                        .HasColumnType("int");

                    b.HasKey("Id_Employee_Cities");

                    b.HasIndex("CitiesColId_CitiesCol");

                    b.HasIndex("EmployeeId_Employee");

                    b.HasIndex("TypeCityId_TypeCity");

                    b.ToTable("Employee_Cities");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Employees", b =>
                {
                    b.Property<int>("Id_Employee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Childrens")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime>("Date_Birth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_ExpeditionDoc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartmentsId_Departments")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeTypeId_EmployeeType")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Gen")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("GroupBlood")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("IdEmployeeType")
                        .HasColumnType("int");

                    b.Property<int>("IdInternalInformation")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusCivil")
                        .HasColumnType("int");

                    b.Property<int>("IdTypeDocument")
                        .HasColumnType("int");

                    b.Property<int>("Internal_InformationId_Internal_Information")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("MilitaryNotebook")
                        .HasColumnType("bit");

                    b.Property<string>("N_Document")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("NumberMilitaryote")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("PersonsDepends")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("RH")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("StatusCivilId_StatusCivil")
                        .HasColumnType("int");

                    b.Property<string>("Studies")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Studies_In")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("TypeDocumentId_TypeDocument")
                        .HasColumnType("int");

                    b.HasKey("Id_Employee");

                    b.HasIndex("DepartmentsId_Departments");

                    b.HasIndex("EmployeeTypeId_EmployeeType");

                    b.HasIndex("Internal_InformationId_Internal_Information");

                    b.HasIndex("StatusCivilId_StatusCivil");

                    b.HasIndex("TypeDocumentId_TypeDocument");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Providers.Providers", b =>
                {
                    b.Property<int>("Id_Providers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("CitiesColId_CitiesCol")
                        .HasColumnType("int");

                    b.Property<string>("EmailContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCity")
                        .HasColumnType("int");

                    b.Property<int>("Id_ProvidersType")
                        .HasColumnType("int");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("NameContact")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProviderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ProvidersTypeId_ProviderType")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TypeIdentification")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("Id_Providers");

                    b.HasIndex("CitiesColId_CitiesCol");

                    b.HasIndex("ProvidersTypeId_ProviderType");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Providers.ProvidersType", b =>
                {
                    b.Property<int>("Id_ProviderType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProvidersTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_ProviderType");

                    b.ToTable("ProvidersType");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Users.Users", b =>
                {
                    b.Property<int>("Id_Users")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("Id_UsersType")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("N_Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TypeDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<int?>("UserTypeId_UsersType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id_Users");

                    b.HasIndex("UserTypeId_UsersType");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Users.UsersType", b =>
                {
                    b.Property<int>("Id_UsersType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UsersTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id_UsersType");

                    b.ToTable("UsersType");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Afiliations.Afiliation", b =>
                {
                    b.HasOne("Bussiness_Logic.Models.Afiliations.AFP", "AFP")
                        .WithMany()
                        .HasForeignKey("AFPId_AFP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bussiness_Logic.Models.Afiliations.ARL", "ARL")
                        .WithMany()
                        .HasForeignKey("ARLId_ARL")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bussiness_Logic.Models.Afiliations.CCF", "CCF")
                        .WithMany()
                        .HasForeignKey("CCFId_CCF")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bussiness_Logic.Models.Afiliations.EPS", "EPS")
                        .WithMany()
                        .HasForeignKey("EPSId_EPS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bussiness_Logic.Models.Employees", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeesId_Employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Col.CitiesCol", b =>
                {
                    b.HasOne("Bussiness_Logic.Models.Col.DepartmentsCol", "DepartmentsCol")
                        .WithMany("CitiesCol")
                        .HasForeignKey("DepartmentsColId_Departments");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Employee.Employee_Cities", b =>
                {
                    b.HasOne("Bussiness_Logic.Models.Col.CitiesCol", "CitiesCol")
                        .WithMany()
                        .HasForeignKey("CitiesColId_CitiesCol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bussiness_Logic.Models.Employees", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId_Employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bussiness_Logic.Models.Complements.TypeCity", "TypeCity")
                        .WithMany()
                        .HasForeignKey("TypeCityId_TypeCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Employees", b =>
                {
                    b.HasOne("Bussiness_Logic.Models.Employee.Departments", null)
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentsId_Departments");

                    b.HasOne("Bussiness_Logic.Models.Employee.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId_EmployeeType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bussiness_Logic.Models.Complements.Internal_Information", "Internal_Information")
                        .WithMany()
                        .HasForeignKey("Internal_InformationId_Internal_Information")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bussiness_Logic.Models.Complements.StatusCivil", "StatusCivil")
                        .WithMany()
                        .HasForeignKey("StatusCivilId_StatusCivil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bussiness_Logic.Models.Complements.TypeDocument", "TypeDocument")
                        .WithMany()
                        .HasForeignKey("TypeDocumentId_TypeDocument")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Providers.Providers", b =>
                {
                    b.HasOne("Bussiness_Logic.Models.Col.CitiesCol", "CitiesCol")
                        .WithMany()
                        .HasForeignKey("CitiesColId_CitiesCol");

                    b.HasOne("Bussiness_Logic.Models.Providers.ProvidersType", "ProvidersType")
                        .WithMany("Providers")
                        .HasForeignKey("ProvidersTypeId_ProviderType");
                });

            modelBuilder.Entity("Bussiness_Logic.Models.Users.Users", b =>
                {
                    b.HasOne("Bussiness_Logic.Models.Users.UsersType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId_UsersType");
                });
#pragma warning restore 612, 618
        }
    }
}
